package kevin.module.modules.exploit

import kevin.module.FloatValue
import kevin.module.ListValue
import kevin.module.Module
import kevin.module.ModuleCategory
import net.minecraft.network.play.client.CPacketPlayer
import kotlin.math.cos
import kotlin.math.sin

class Clip : Module("Clip", "Allows you to clip through blocks.", category = ModuleCategory.EXPLOIT) {
    private val modeValue = ListValue("Mode", arrayOf("Teleport", "Flag"), "Teleport")
    private val horizontalValue = FloatValue("Horizontal", 0F, -10F, 10F)
    private val verticalValue = FloatValue("Vertical", 5F, -10F, 10F)

    override fun onEnable() {
        val thePlayer = mc.player ?: return

        val yaw = Math.toRadians(thePlayer.rotationYaw.toDouble())
        val x = -sin(yaw) * horizontalValue.get()
        val z = cos(yaw) * horizontalValue.get()

        when (modeValue.get().toLowerCase()) {
            "teleport" -> thePlayer.setPosition(thePlayer.posX + x, thePlayer.posY + verticalValue.get(),
                thePlayer.posZ + z)

            "flag" -> {
                val netHandler = mc.connection!!

                netHandler.sendPacket(CPacketPlayer.Position(thePlayer.posX,
                    thePlayer.posY, thePlayer.posZ, true))
                netHandler.sendPacket(CPacketPlayer.Position(0.5, 0.0,
                    0.5, true))
                netHandler.sendPacket(CPacketPlayer.Position(thePlayer.posX,
                    thePlayer.posY, thePlayer.posZ, true))
                netHandler.sendPacket(CPacketPlayer.Position(thePlayer.posX + x,
                    thePlayer.posY + verticalValue.get(), thePlayer.posZ + z, true))
                netHandler.sendPacket(
                    CPacketPlayer.Position(0.5,
                    0.0, 0.5, true))
                netHandler.sendPacket(CPacketPlayer.Position(thePlayer.posX
                        + 0.5, thePlayer.posY, thePlayer.posZ + 0.5, true))

                thePlayer.setPosition(thePlayer.posX + -sin(yaw) * 0.04, thePlayer.posY,
                    thePlayer.posZ + cos(yaw) * 0.04)
            }
        }
        state = false
    }
}