package kevin.module.modules.exploit

import kevin.event.EventTarget
import kevin.event.KeyEvent
import kevin.event.PacketEvent
import kevin.event.ScreenEvent
import kevin.module.Module
import kevin.module.ModuleCategory
import net.minecraft.client.gui.inventory.GuiContainer
import net.minecraft.client.gui.inventory.GuiInventory
import net.minecraft.network.play.client.CPacketCloseWindow
import net.minecraft.network.play.server.SPacketCloseWindow
import org.lwjgl.input.Keyboard

class KeepContainer : Module("KeepContainer", "Allows you to open a formerly closed inventory container everywhere. (Press INSERT Key to open)", category = ModuleCategory.EXPLOIT) {
    private var container: GuiContainer? = null

    override fun onDisable() {
        if (container != null)
            mc.connection!!.sendPacket(CPacketCloseWindow(container!!.inventorySlots!!.windowId))

        container = null
    }

    @EventTarget
    fun onGui(event: ScreenEvent) {
        val guiScreen = event.guiScreen

        if ((guiScreen)is GuiContainer && (guiScreen) !is GuiInventory)
            container = guiScreen
    }

    @EventTarget
    fun onKey(event: KeyEvent) {
        if (event.key == Keyboard.KEY_INSERT) {
            if (container == null)
                return

            mc.displayGuiScreen(container)
        }
    }

    @EventTarget
    fun onPacket(event: PacketEvent) {
        if ((event.packet)is CPacketCloseWindow)
            event.cancelEvent()
        else if ((event.packet)is SPacketCloseWindow) {
            val packetCloseWindow = event.packet

            if (container != null && container!!.inventorySlots != null && packetCloseWindow.windowId == container!!.inventorySlots!!.windowId)
                container = null
        }
    }
}