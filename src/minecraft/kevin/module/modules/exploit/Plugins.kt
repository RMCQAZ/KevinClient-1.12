package kevin.module.modules.exploit

import joptsimple.internal.Strings
import kevin.event.EventTarget
import kevin.event.PacketEvent
import kevin.event.UpdateEvent
import kevin.module.Module
import kevin.module.ModuleCategory
import kevin.utils.ChatUtils
import kevin.utils.timers.TickTimer
import net.minecraft.network.play.client.CPacketTabComplete
import net.minecraft.network.play.server.SPacketTabComplete

class Plugins : Module("Plugins", "Allows you to see which plugins the server is using.", category = ModuleCategory.EXPLOIT) {

    private val tickTimer = TickTimer()

    override fun onEnable() {
        if (mc.player == null)
            return

        mc.connection!!.sendPacket(CPacketTabComplete("/",null,false))
        tickTimer.reset()
    }

    @EventTarget
    fun onUpdate(event: UpdateEvent) {
        tickTimer.update()

        if(tickTimer.hasTimePassed(20)) {
            ChatUtils.message("§cPlugins check timed out...")
            tickTimer.reset()
            state = false
        }
    }

    @EventTarget
    fun onPacket(event: PacketEvent) {
        if ((event.packet)is SPacketTabComplete) {
            val s3APacketTabComplete: SPacketTabComplete = event.packet

            val plugins = ArrayList<String>()
            val commands = s3APacketTabComplete.matches

            for (command1 in commands) {
                val command = command1.split(":")

                if (command.size > 1) {
                    val pluginName = command[0].replace("/", "")

                    if (!plugins.contains(pluginName))
                        plugins.add(pluginName)
                }
            }

            plugins.sort()

            if(plugins.isNotEmpty())
                ChatUtils.message("§aPlugins §7(§8" + plugins.size + "§7): §c" + Strings.join(plugins.toArray(arrayOfNulls<String>(0)), "§7, §c"))
            else
                ChatUtils.message("§cNo plugins found.")
            state = false
            tickTimer.reset()
        }
    }
}